// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Contact info should render Contact info correctly 1`] = `
<View
  onLayout={[Function]}
  pointerEvents="box-none"
  style={
    Object {
      "backgroundColor": "#fafafa",
      "paddingBottom": 0,
      "paddingLeft": 0,
      "paddingRight": 0,
      "paddingTop": 20,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "alignItems": "stretch",
          "height": "100%",
          "justifyContent": "flex-start",
        },
        undefined,
      ]
    }
  >
    <Modal
      animationType="none"
      hardwareAccelerated={false}
      hideModalContentWhileAnimating={false}
      onModalHide={[Function]}
      onModalWillHide={[Function]}
      onModalWillShow={[Function]}
      onRequestClose={[Function]}
      onSwipeComplete={[Function]}
      scrollOffset={0}
      scrollOffsetMax={0}
      scrollTo={[Function]}
      supportedOrientations={
        Array [
          "portrait",
          "landscape",
        ]
      }
      swipeDirection="down"
      swipeThreshold={100}
      transparent={true}
      visible={false}
    >
      <View
        accessible={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "#000000",
            "bottom": 0,
            "height": 1334,
            "left": 0,
            "opacity": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "width": 750,
          }
        }
      />
      <View
        hideModalContentWhileAnimating={false}
        onModalHide={[Function]}
        onModalWillHide={[Function]}
        onModalWillShow={[Function]}
        onMoveShouldSetResponder={[Function]}
        onMoveShouldSetResponderCapture={[Function]}
        onResponderEnd={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderReject={[Function]}
        onResponderRelease={[Function]}
        onResponderStart={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        onStartShouldSetResponderCapture={[Function]}
        onSwipeComplete={[Function]}
        pointerEvents="box-none"
        scrollOffset={0}
        scrollOffsetMax={0}
        scrollTo={[Function]}
        style={
          Object {
            "flex": 1,
            "justifyContent": "center",
            "left": 0,
            "margin": 0,
            "position": "relative",
            "top": 0,
            "transform": Array [
              Object {
                "translateY": 0,
              },
            ],
            "zIndex": 10,
          }
        }
        supportedOrientations={
          Array [
            "portrait",
            "landscape",
          ]
        }
        swipeDirection="down"
        swipeThreshold={100}
      >
        <View
          style={
            Object {
              "flex": 1,
            }
          }
        >
          <View
            bgColor="#f5f5f5"
            style={
              Array [
                Object {
                  "height": "100%",
                  "width": "100%",
                },
                undefined,
              ]
            }
          >
            <View
              accessible={true}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Array [
                  Object {
                    "height": "100%",
                    "width": "100%",
                  },
                  undefined,
                ]
              }
            />
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "#fafafa",
                    "borderTopLeftRadius": 30,
                    "borderTopRightRadius": 30,
                    "elevation": 1,
                    "marginTop": "auto",
                    "paddingBottom": 0,
                    "paddingLeft": 20,
                    "paddingRight": 20,
                    "paddingTop": 0,
                    "shadowColor": "rgba(0,0,0,.1)",
                    "shadowOffset": Object {
                      "height": 2,
                      "width": 0,
                    },
                    "shadowOpacity": 1,
                    "shadowRadius": 7,
                  },
                  undefined,
                ]
              }
              theme={
                Object {
                  "background": "#fafafa",
                  "borderRadius": "30px",
                  "padding": "0 20px",
                }
              }
            >
              <View
                style={
                  Array [
                    Object {
                      "width": "100%",
                    },
                    undefined,
                  ]
                }
              >
                <View
                  noPadding={true}
                  style={
                    Array [
                      Object {
                        "borderBottomWidth": 0,
                        "paddingBottom": 0,
                        "paddingLeft": 0,
                        "paddingRight": 0,
                        "paddingTop": 0,
                        "zIndex": 10,
                      },
                      undefined,
                    ]
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "flex-end",
                          "flexDirection": "row",
                          "height": 50,
                          "justifyContent": "flex-end",
                          "marginBottom": 4,
                          "marginTop": 20,
                        },
                        undefined,
                      ]
                    }
                  >
                    <View
                      flex={[Function]}
                      showTitleLeft={true}
                      style={
                        Array [
                          Object {
                            "alignItems": "flex-start",
                            "alignSelf": "center",
                            "flex": 1,
                          },
                          Object {
                            "alignItems": "flex-end",
                            "flexBasis": 0,
                            "flexGrow": 2,
                            "flexShrink": 1,
                            "justifyContent": "flex-start",
                          },
                          undefined,
                        ]
                      }
                    >
                      <View
                        noMargin={true}
                        style={
                          Array [
                            Object {
                              "alignSelf": "flex-start",
                              "marginBottom": 0,
                              "marginLeft": 0,
                              "marginRight": 0,
                              "marginTop": 0,
                              "position": "relative",
                              "top": 0,
                            },
                            undefined,
                          ]
                        }
                      >
                        <Text
                          ellipsizeMode="middle"
                          numberOfLines={1}
                          style={
                            Array [
                              Object {
                                "color": "#0A1427",
                                "fontFamily": "Aktiv Grotesk App",
                                "fontWeight": "400",
                                "includeFontPadding": false,
                                "textAlignVertical": "center",
                              },
                              Array [
                                Object {
                                  "color": "#0A1427",
                                  "fontFamily": "Aktiv Grotesk App",
                                  "fontWeight": "600",
                                  "includeFontPadding": false,
                                  "textAlignVertical": "center",
                                },
                                Array [
                                  Object {
                                    "fontSize": 22,
                                    "fontWeight": "700",
                                    "lineHeight": 28,
                                  },
                                  Array [
                                    Object {
                                      "fontFamily": "Aktiv Grotesk App",
                                    },
                                    Object {},
                                  ],
                                ],
                              ],
                            ]
                          }
                        >
                          Your contact info
                          <Text
                            style={
                              Array [
                                Object {
                                  "color": "#0A1427",
                                  "fontFamily": "Aktiv Grotesk App",
                                  "fontWeight": "400",
                                  "includeFontPadding": false,
                                  "textAlignVertical": "center",
                                },
                                Array [
                                  Object {
                                    "color": "#0A1427",
                                    "fontFamily": "Aktiv Grotesk App",
                                    "fontWeight": "600",
                                    "includeFontPadding": false,
                                    "textAlignVertical": "center",
                                  },
                                  Array [
                                    Object {
                                      "color": "#00bfff",
                                      "fontSize": 30,
                                    },
                                    undefined,
                                  ],
                                ],
                              ]
                            }
                          >
                            .
                          </Text>
                        </Text>
                      </View>
                    </View>
                    <View
                      flex={[Function]}
                      onClose={[Function]}
                      style={
                        Array [
                          Object {
                            "alignItems": "flex-end",
                            "alignSelf": "center",
                            "flex": 1,
                          },
                          Object {
                            "alignItems": "flex-end",
                            "flexBasis": 44,
                            "flexDirection": "row",
                            "flexGrow": 0,
                            "flexShrink": 0,
                            "justifyContent": "flex-end",
                          },
                          undefined,
                        ]
                      }
                    >
                      <View
                        style={
                          Array [
                            Object {
                              "alignItems": "center",
                              "flexDirection": "row",
                              "justifyContent": "flex-end",
                            },
                            undefined,
                          ]
                        }
                      >
                        <View
                          accessible={true}
                          isTVSelectable={true}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          style={
                            Object {
                              "alignItems": "flex-end",
                              "height": 44,
                              "justifyContent": "center",
                              "marginRight": -10,
                              "opacity": 1,
                              "paddingBottom": 0,
                              "paddingLeft": 0,
                              "paddingRight": 10,
                              "paddingTop": 0,
                              "width": 44,
                            }
                          }
                        >
                          <View
                            name="close"
                            style={
                              Object {
                                "color": "#0A1427",
                                "fontSize": 16,
                                "marginBottom": undefined,
                                "marginLeft": undefined,
                                "marginRight": undefined,
                                "marginTop": undefined,
                                "paddingTop": 0,
                              }
                            }
                          />
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
              <View
                style={
                  Array [
                    Object {
                      "flexDirection": "column",
                    },
                    undefined,
                  ]
                }
              >
                <View>
                  <View>
                    <Text
                      center={true}
                      light={true}
                      small={true}
                      style={
                        Array [
                          Object {
                            "color": "#0A1427",
                            "fontFamily": "Aktiv Grotesk App",
                            "fontWeight": "400",
                            "includeFontPadding": false,
                            "textAlignVertical": "center",
                          },
                          Array [
                            Object {
                              "color": "#8B939E",
                              "fontSize": 16,
                              "marginBottom": 5,
                              "textAlign": "center",
                            },
                            undefined,
                          ],
                        ]
                      }
                    >
                      Allow someone to scan this QR Code to share your contact information with them
                    </Text>
                    <View
                      style={
                        Array [
                          Object {
                            "marginBottom": 50,
                            "marginLeft": 0,
                            "marginRight": 0,
                            "marginTop": 20,
                          },
                          undefined,
                        ]
                      }
                    >
                      <View
                        accessible={true}
                        isTVSelectable={true}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "alignItems": "center",
                            "opacity": 1,
                            "paddingVertical": 14,
                          }
                        }
                      >
                        <RNSVGSvgView
                          bbHeight={180}
                          bbWidth={180}
                          height={180}
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderWidth": 0,
                              },
                              undefined,
                              null,
                              Object {
                                "flex": 0,
                                "height": 180,
                                "width": 180,
                              },
                            ]
                          }
                          width={180}
                        >
                          <RNSVGGroup
                            fill={
                              Array [
                                0,
                                4278190080,
                              ]
                            }
                            fillOpacity={1}
                            fillRule={1}
                            font={Object {}}
                            matrix={
                              Array [
                                1,
                                0,
                                0,
                                1,
                                0,
                                0,
                              ]
                            }
                            opacity={1}
                            originX={0}
                            originY={0}
                            propList={Array []}
                            rotation={0}
                            scaleX={1}
                            scaleY={1}
                            skewX={0}
                            skewY={0}
                            stroke={null}
                            strokeDasharray={null}
                            strokeDashoffset={null}
                            strokeLinecap={0}
                            strokeLinejoin={0}
                            strokeMiterlimit={4}
                            strokeOpacity={1}
                            strokeWidth={1}
                            vectorEffect={0}
                            x={0}
                            y={0}
                          >
                            <RNSVGDefs>
                              <RNSVGClipPath
                                name="clip-wrapper"
                              >
                                <RNSVGRect
                                  fill={
                                    Array [
                                      0,
                                      4278190080,
                                    ]
                                  }
                                  fillOpacity={1}
                                  fillRule={1}
                                  height={24}
                                  matrix={
                                    Array [
                                      1,
                                      0,
                                      0,
                                      1,
                                      0,
                                      0,
                                    ]
                                  }
                                  opacity={1}
                                  originX={0}
                                  originY={0}
                                  propList={Array []}
                                  rotation={0}
                                  rx={0}
                                  ry={0}
                                  scaleX={1}
                                  scaleY={1}
                                  skewX={0}
                                  skewY={0}
                                  stroke={null}
                                  strokeDasharray={null}
                                  strokeDashoffset={null}
                                  strokeLinecap={0}
                                  strokeLinejoin={0}
                                  strokeMiterlimit={4}
                                  strokeOpacity={1}
                                  strokeWidth={1}
                                  vectorEffect={0}
                                  width={24}
                                  x={0}
                                  y={0}
                                />
                              </RNSVGClipPath>
                              <RNSVGClipPath
                                name="clip-logo"
                              >
                                <RNSVGRect
                                  fill={
                                    Array [
                                      0,
                                      4278190080,
                                    ]
                                  }
                                  fillOpacity={1}
                                  fillRule={1}
                                  height={20}
                                  matrix={
                                    Array [
                                      1,
                                      0,
                                      0,
                                      1,
                                      0,
                                      0,
                                    ]
                                  }
                                  opacity={1}
                                  originX={0}
                                  originY={0}
                                  propList={Array []}
                                  rotation={0}
                                  rx={0}
                                  ry={0}
                                  scaleX={1}
                                  scaleY={1}
                                  skewX={0}
                                  skewY={0}
                                  stroke={null}
                                  strokeDasharray={null}
                                  strokeDashoffset={null}
                                  strokeLinecap={0}
                                  strokeLinejoin={0}
                                  strokeMiterlimit={4}
                                  strokeOpacity={1}
                                  strokeWidth={1}
                                  vectorEffect={0}
                                  width={20}
                                  x={0}
                                  y={0}
                                />
                              </RNSVGClipPath>
                            </RNSVGDefs>
                            <RNSVGRect
                              fill={
                                Array [
                                  0,
                                  4294967295,
                                ]
                              }
                              fillOpacity={1}
                              fillRule={1}
                              height={180}
                              matrix={
                                Array [
                                  1,
                                  0,
                                  0,
                                  1,
                                  0,
                                  0,
                                ]
                              }
                              opacity={1}
                              originX={0}
                              originY={0}
                              propList={
                                Array [
                                  "fill",
                                ]
                              }
                              rotation={0}
                              rx={0}
                              ry={0}
                              scaleX={1}
                              scaleY={1}
                              skewX={0}
                              skewY={0}
                              stroke={null}
                              strokeDasharray={null}
                              strokeDashoffset={null}
                              strokeLinecap={0}
                              strokeLinejoin={0}
                              strokeMiterlimit={4}
                              strokeOpacity={1}
                              strokeWidth={1}
                              vectorEffect={0}
                              width={180}
                              x={0}
                              y={0}
                            />
                            <RNSVGPath
                              d="M0 2.727272727272727 L38.18181818181818 2.727272727272727 M54.54545454545454 2.727272727272727 L65.45454545454545 2.727272727272727 M76.36363636363636 2.727272727272727 L87.27272727272727 2.727272727272727 M114.54545454545453 2.727272727272727 L119.99999999999999 2.727272727272727 M125.45454545454544 2.727272727272727 L130.9090909090909 2.727272727272727 M141.8181818181818 2.727272727272727 L180 2.727272727272727 M0 8.181818181818182 L5.454545454545454 8.181818181818182 M32.72727272727273 8.181818181818182 L38.18181818181818 8.181818181818182 M49.090909090909086 8.181818181818182 L70.9090909090909 8.181818181818182 M92.72727272727272 8.181818181818182 L98.18181818181817 8.181818181818182 M103.63636363636363 8.181818181818182 L109.09090909090908 8.181818181818182 M119.99999999999999 8.181818181818182 L136.36363636363635 8.181818181818182 M141.8181818181818 8.181818181818182 L147.27272727272725 8.181818181818182 M174.54545454545453 8.181818181818182 L180 8.181818181818182 M0 13.636363636363635 L5.454545454545454 13.636363636363635 M10.909090909090908 13.636363636363635 L27.27272727272727 13.636363636363635 M32.72727272727273 13.636363636363635 L38.18181818181818 13.636363636363635 M43.63636363636363 13.636363636363635 L70.9090909090909 13.636363636363635 M76.36363636363636 13.636363636363635 L81.81818181818181 13.636363636363635 M98.18181818181817 13.636363636363635 L114.54545454545453 13.636363636363635 M130.9090909090909 13.636363636363635 L136.36363636363635 13.636363636363635 M141.8181818181818 13.636363636363635 L147.27272727272725 13.636363636363635 M152.72727272727272 13.636363636363635 L169.09090909090907 13.636363636363635 M174.54545454545453 13.636363636363635 L180 13.636363636363635 M0 19.09090909090909 L5.454545454545454 19.09090909090909 M10.909090909090908 19.09090909090909 L27.27272727272727 19.09090909090909 M32.72727272727273 19.09090909090909 L38.18181818181818 19.09090909090909 M43.63636363636363 19.09090909090909 L49.090909090909086 19.09090909090909 M54.54545454545454 19.09090909090909 L65.45454545454545 19.09090909090909 M98.18181818181817 19.09090909090909 L103.63636363636363 19.09090909090909 M109.09090909090908 19.09090909090909 L136.36363636363635 19.09090909090909 M141.8181818181818 19.09090909090909 L147.27272727272725 19.09090909090909 M152.72727272727272 19.09090909090909 L169.09090909090907 19.09090909090909 M174.54545454545453 19.09090909090909 L180 19.09090909090909 M0 24.545454545454543 L5.454545454545454 24.545454545454543 M10.909090909090908 24.545454545454543 L27.27272727272727 24.545454545454543 M32.72727272727273 24.545454545454543 L38.18181818181818 24.545454545454543 M43.63636363636363 24.545454545454543 L49.090909090909086 24.545454545454543 M65.45454545454545 24.545454545454543 L92.72727272727272 24.545454545454543 M98.18181818181817 24.545454545454543 L114.54545454545453 24.545454545454543 M119.99999999999999 24.545454545454543 L125.45454545454544 24.545454545454543 M141.8181818181818 24.545454545454543 L147.27272727272725 24.545454545454543 M152.72727272727272 24.545454545454543 L169.09090909090907 24.545454545454543 M174.54545454545453 24.545454545454543 L180 24.545454545454543 M0 29.999999999999996 L5.454545454545454 29.999999999999996 M32.72727272727273 29.999999999999996 L38.18181818181818 29.999999999999996 M43.63636363636363 29.999999999999996 L49.090909090909086 29.999999999999996 M59.99999999999999 29.999999999999996 L76.36363636363636 29.999999999999996 M92.72727272727272 29.999999999999996 L98.18181818181817 29.999999999999996 M114.54545454545453 29.999999999999996 L119.99999999999999 29.999999999999996 M125.45454545454544 29.999999999999996 L136.36363636363635 29.999999999999996 M141.8181818181818 29.999999999999996 L147.27272727272725 29.999999999999996 M174.54545454545453 29.999999999999996 L180 29.999999999999996 M0 35.45454545454545 L38.18181818181818 35.45454545454545 M43.63636363636363 35.45454545454545 L49.090909090909086 35.45454545454545 M54.54545454545454 35.45454545454545 L59.99999999999999 35.45454545454545 M65.45454545454545 35.45454545454545 L70.9090909090909 35.45454545454545 M76.36363636363636 35.45454545454545 L81.81818181818181 35.45454545454545 M87.27272727272727 35.45454545454545 L92.72727272727272 35.45454545454545 M98.18181818181817 35.45454545454545 L103.63636363636363 35.45454545454545 M109.09090909090908 35.45454545454545 L114.54545454545453 35.45454545454545 M119.99999999999999 35.45454545454545 L125.45454545454544 35.45454545454545 M130.9090909090909 35.45454545454545 L136.36363636363635 35.45454545454545 M141.8181818181818 35.45454545454545 L180 35.45454545454545 M43.63636363636363 40.90909090909091 L49.090909090909086 40.90909090909091 M54.54545454545454 40.90909090909091 L76.36363636363636 40.90909090909091 M87.27272727272727 40.90909090909091 L103.63636363636363 40.90909090909091 M109.09090909090908 40.90909090909091 L114.54545454545453 40.90909090909091 M0 46.36363636363636 L5.454545454545454 46.36363636363636 M10.909090909090908 46.36363636363636 L38.18181818181818 46.36363636363636 M49.090909090909086 46.36363636363636 L65.45454545454545 46.36363636363636 M98.18181818181817 46.36363636363636 L103.63636363636363 46.36363636363636 M114.54545454545453 46.36363636363636 L130.9090909090909 46.36363636363636 M141.8181818181818 46.36363636363636 L169.09090909090907 46.36363636363636 M0 51.81818181818181 L5.454545454545454 51.81818181818181 M16.363636363636363 51.81818181818181 L27.27272727272727 51.81818181818181 M49.090909090909086 51.81818181818181 L59.99999999999999 51.81818181818181 M65.45454545454545 51.81818181818181 L76.36363636363636 51.81818181818181 M81.81818181818181 51.81818181818181 L87.27272727272727 51.81818181818181 M92.72727272727272 51.81818181818181 L98.18181818181817 51.81818181818181 M136.36363636363635 51.81818181818181 L141.8181818181818 51.81818181818181 M158.18181818181816 51.81818181818181 L180 51.81818181818181 M5.454545454545454 57.272727272727266 L10.909090909090908 57.272727272727266 M16.363636363636363 57.272727272727266 L21.818181818181817 57.272727272727266 M27.27272727272727 57.272727272727266 L81.81818181818181 57.272727272727266 M92.72727272727272 57.272727272727266 L98.18181818181817 57.272727272727266 M103.63636363636363 57.272727272727266 L109.09090909090908 57.272727272727266 M119.99999999999999 57.272727272727266 L125.45454545454544 57.272727272727266 M130.9090909090909 57.272727272727266 L136.36363636363635 57.272727272727266 M147.27272727272725 57.272727272727266 L152.72727272727272 57.272727272727266 M163.63636363636363 57.272727272727266 L174.54545454545453 57.272727272727266 M5.454545454545454 62.72727272727272 L16.363636363636363 62.72727272727272 M27.27272727272727 62.72727272727272 L32.72727272727273 62.72727272727272 M43.63636363636363 62.72727272727272 L65.45454545454545 62.72727272727272 M70.9090909090909 62.72727272727272 L76.36363636363636 62.72727272727272 M87.27272727272727 62.72727272727272 L109.09090909090908 62.72727272727272 M130.9090909090909 62.72727272727272 L136.36363636363635 62.72727272727272 M147.27272727272725 62.72727272727272 L169.09090909090907 62.72727272727272 M5.454545454545454 68.18181818181819 L10.909090909090908 68.18181818181819 M16.363636363636363 68.18181818181819 L27.27272727272727 68.18181818181819 M32.72727272727273 68.18181818181819 L49.090909090909086 68.18181818181819 M65.45454545454545 68.18181818181819 L70.9090909090909 68.18181818181819 M76.36363636363636 68.18181818181819 L92.72727272727272 68.18181818181819 M109.09090909090908 68.18181818181819 L130.9090909090909 68.18181818181819 M136.36363636363635 68.18181818181819 L152.72727272727272 68.18181818181819 M163.63636363636363 68.18181818181819 L169.09090909090907 68.18181818181819 M174.54545454545453 68.18181818181819 L180 68.18181818181819 M0 73.63636363636364 L10.909090909090908 73.63636363636364 M21.818181818181817 73.63636363636364 L27.27272727272727 73.63636363636364 M43.63636363636363 73.63636363636364 L49.090909090909086 73.63636363636364 M54.54545454545454 73.63636363636364 L59.99999999999999 73.63636363636364 M65.45454545454545 73.63636363636364 L76.36363636363636 73.63636363636364 M81.81818181818181 73.63636363636364 L87.27272727272727 73.63636363636364 M92.72727272727272 73.63636363636364 L114.54545454545453 73.63636363636364 M119.99999999999999 73.63636363636364 L125.45454545454544 73.63636363636364 M141.8181818181818 73.63636363636364 L169.09090909090907 73.63636363636364 M0 79.0909090909091 L21.818181818181817 79.0909090909091 M27.27272727272727 79.0909090909091 L43.63636363636363 79.0909090909091 M65.45454545454545 79.0909090909091 L76.36363636363636 79.0909090909091 M81.81818181818181 79.0909090909091 L92.72727272727272 79.0909090909091 M130.9090909090909 79.0909090909091 L136.36363636363635 79.0909090909091 M141.8181818181818 79.0909090909091 L152.72727272727272 79.0909090909091 M163.63636363636363 79.0909090909091 L180 79.0909090909091 M0 84.54545454545455 L32.72727272727273 84.54545454545455 M38.18181818181818 84.54545454545455 L43.63636363636363 84.54545454545455 M49.090909090909086 84.54545454545455 L65.45454545454545 84.54545454545455 M81.81818181818181 84.54545454545455 L87.27272727272727 84.54545454545455 M92.72727272727272 84.54545454545455 L103.63636363636363 84.54545454545455 M109.09090909090908 84.54545454545455 L114.54545454545453 84.54545454545455 M130.9090909090909 84.54545454545455 L136.36363636363635 84.54545454545455 M141.8181818181818 84.54545454545455 L163.63636363636363 84.54545454545455 M174.54545454545453 84.54545454545455 L180 84.54545454545455 M0 90 L5.454545454545454 90 M16.363636363636363 90 L38.18181818181818 90 M70.9090909090909 90 L92.72727272727272 90 M98.18181818181817 90 L103.63636363636363 90 M109.09090909090908 90 L114.54545454545453 90 M119.99999999999999 90 L152.72727272727272 90 M169.09090909090907 90 L180 90 M0 95.45454545454545 L5.454545454545454 95.45454545454545 M10.909090909090908 95.45454545454545 L16.363636363636363 95.45454545454545 M27.27272727272727 95.45454545454545 L32.72727272727273 95.45454545454545 M38.18181818181818 95.45454545454545 L54.54545454545454 95.45454545454545 M65.45454545454545 95.45454545454545 L76.36363636363636 95.45454545454545 M87.27272727272727 95.45454545454545 L92.72727272727272 95.45454545454545 M98.18181818181817 95.45454545454545 L103.63636363636363 95.45454545454545 M125.45454545454544 95.45454545454545 L130.9090909090909 95.45454545454545 M141.8181818181818 95.45454545454545 L163.63636363636363 95.45454545454545 M169.09090909090907 95.45454545454545 L174.54545454545453 95.45454545454545 M10.909090909090908 100.9090909090909 L16.363636363636363 100.9090909090909 M21.818181818181817 100.9090909090909 L27.27272727272727 100.9090909090909 M32.72727272727273 100.9090909090909 L38.18181818181818 100.9090909090909 M49.090909090909086 100.9090909090909 L54.54545454545454 100.9090909090909 M65.45454545454545 100.9090909090909 L70.9090909090909 100.9090909090909 M76.36363636363636 100.9090909090909 L87.27272727272727 100.9090909090909 M98.18181818181817 100.9090909090909 L109.09090909090908 100.9090909090909 M125.45454545454544 100.9090909090909 L136.36363636363635 100.9090909090909 M141.8181818181818 100.9090909090909 L147.27272727272725 100.9090909090909 M158.18181818181816 100.9090909090909 L169.09090909090907 100.9090909090909 M174.54545454545453 100.9090909090909 L180 100.9090909090909 M5.454545454545454 106.36363636363636 L10.909090909090908 106.36363636363636 M21.818181818181817 106.36363636363636 L27.27272727272727 106.36363636363636 M43.63636363636363 106.36363636363636 L49.090909090909086 106.36363636363636 M54.54545454545454 106.36363636363636 L65.45454545454545 106.36363636363636 M76.36363636363636 106.36363636363636 L92.72727272727272 106.36363636363636 M109.09090909090908 106.36363636363636 L119.99999999999999 106.36363636363636 M125.45454545454544 106.36363636363636 L130.9090909090909 106.36363636363636 M152.72727272727272 106.36363636363636 L158.18181818181816 106.36363636363636 M163.63636363636363 106.36363636363636 L169.09090909090907 106.36363636363636 M174.54545454545453 106.36363636363636 L180 106.36363636363636 M0 111.81818181818181 L10.909090909090908 111.81818181818181 M16.363636363636363 111.81818181818181 L21.818181818181817 111.81818181818181 M32.72727272727273 111.81818181818181 L43.63636363636363 111.81818181818181 M59.99999999999999 111.81818181818181 L87.27272727272727 111.81818181818181 M98.18181818181817 111.81818181818181 L109.09090909090908 111.81818181818181 M119.99999999999999 111.81818181818181 L125.45454545454544 111.81818181818181 M130.9090909090909 111.81818181818181 L163.63636363636363 111.81818181818181 M0 117.27272727272727 L5.454545454545454 117.27272727272727 M16.363636363636363 117.27272727272727 L32.72727272727273 117.27272727272727 M49.090909090909086 117.27272727272727 L70.9090909090909 117.27272727272727 M81.81818181818181 117.27272727272727 L92.72727272727272 117.27272727272727 M103.63636363636363 117.27272727272727 L109.09090909090908 117.27272727272727 M114.54545454545453 117.27272727272727 L130.9090909090909 117.27272727272727 M152.72727272727272 117.27272727272727 L158.18181818181816 117.27272727272727 M169.09090909090907 117.27272727272727 L180 117.27272727272727 M0 122.72727272727272 L5.454545454545454 122.72727272727272 M10.909090909090908 122.72727272727272 L49.090909090909086 122.72727272727272 M54.54545454545454 122.72727272727272 L70.9090909090909 122.72727272727272 M76.36363636363636 122.72727272727272 L81.81818181818181 122.72727272727272 M92.72727272727272 122.72727272727272 L109.09090909090908 122.72727272727272 M119.99999999999999 122.72727272727272 L136.36363636363635 122.72727272727272 M141.8181818181818 122.72727272727272 L158.18181818181816 122.72727272727272 M163.63636363636363 122.72727272727272 L169.09090909090907 122.72727272727272 M174.54545454545453 122.72727272727272 L180 122.72727272727272 M0 128.18181818181816 L5.454545454545454 128.18181818181816 M38.18181818181818 128.18181818181816 L49.090909090909086 128.18181818181816 M59.99999999999999 128.18181818181816 L65.45454545454545 128.18181818181816 M87.27272727272727 128.18181818181816 L103.63636363636363 128.18181818181816 M125.45454545454544 128.18181818181816 L130.9090909090909 128.18181818181816 M158.18181818181816 128.18181818181816 L163.63636363636363 128.18181818181816 M0 133.63636363636363 L5.454545454545454 133.63636363636363 M16.363636363636363 133.63636363636363 L21.818181818181817 133.63636363636363 M32.72727272727273 133.63636363636363 L38.18181818181818 133.63636363636363 M49.090909090909086 133.63636363636363 L59.99999999999999 133.63636363636363 M70.9090909090909 133.63636363636363 L81.81818181818181 133.63636363636363 M87.27272727272727 133.63636363636363 L92.72727272727272 133.63636363636363 M98.18181818181817 133.63636363636363 L114.54545454545453 133.63636363636363 M119.99999999999999 133.63636363636363 L125.45454545454544 133.63636363636363 M130.9090909090909 133.63636363636363 L158.18181818181816 133.63636363636363 M163.63636363636363 133.63636363636363 L174.54545454545453 133.63636363636363 M43.63636363636363 139.09090909090907 L49.090909090909086 139.09090909090907 M87.27272727272727 139.09090909090907 L98.18181818181817 139.09090909090907 M114.54545454545453 139.09090909090907 L119.99999999999999 139.09090909090907 M130.9090909090909 139.09090909090907 L136.36363636363635 139.09090909090907 M152.72727272727272 139.09090909090907 L158.18181818181816 139.09090909090907 M163.63636363636363 139.09090909090907 L174.54545454545453 139.09090909090907 M0 144.54545454545453 L38.18181818181818 144.54545454545453 M49.090909090909086 144.54545454545453 L65.45454545454545 144.54545454545453 M76.36363636363636 144.54545454545453 L87.27272727272727 144.54545454545453 M92.72727272727272 144.54545454545453 L98.18181818181817 144.54545454545453 M103.63636363636363 144.54545454545453 L109.09090909090908 144.54545454545453 M119.99999999999999 144.54545454545453 L136.36363636363635 144.54545454545453 M141.8181818181818 144.54545454545453 L147.27272727272725 144.54545454545453 M152.72727272727272 144.54545454545453 L163.63636363636363 144.54545454545453 M174.54545454545453 144.54545454545453 L180 144.54545454545453 M0 149.99999999999997 L5.454545454545454 149.99999999999997 M32.72727272727273 149.99999999999997 L38.18181818181818 149.99999999999997 M43.63636363636363 149.99999999999997 L49.090909090909086 149.99999999999997 M65.45454545454545 149.99999999999997 L81.81818181818181 149.99999999999997 M92.72727272727272 149.99999999999997 L114.54545454545453 149.99999999999997 M125.45454545454544 149.99999999999997 L136.36363636363635 149.99999999999997 M152.72727272727272 149.99999999999997 L158.18181818181816 149.99999999999997 M163.63636363636363 149.99999999999997 L169.09090909090907 149.99999999999997 M174.54545454545453 149.99999999999997 L180 149.99999999999997 M0 155.45454545454544 L5.454545454545454 155.45454545454544 M10.909090909090908 155.45454545454544 L27.27272727272727 155.45454545454544 M32.72727272727273 155.45454545454544 L38.18181818181818 155.45454545454544 M43.63636363636363 155.45454545454544 L49.090909090909086 155.45454545454544 M54.54545454545454 155.45454545454544 L81.81818181818181 155.45454545454544 M87.27272727272727 155.45454545454544 L92.72727272727272 155.45454545454544 M114.54545454545453 155.45454545454544 L119.99999999999999 155.45454545454544 M125.45454545454544 155.45454545454544 L163.63636363636363 155.45454545454544 M0 160.90909090909088 L5.454545454545454 160.90909090909088 M10.909090909090908 160.90909090909088 L27.27272727272727 160.90909090909088 M32.72727272727273 160.90909090909088 L38.18181818181818 160.90909090909088 M43.63636363636363 160.90909090909088 L49.090909090909086 160.90909090909088 M76.36363636363636 160.90909090909088 L87.27272727272727 160.90909090909088 M92.72727272727272 160.90909090909088 L103.63636363636363 160.90909090909088 M136.36363636363635 160.90909090909088 L147.27272727272725 160.90909090909088 M0 166.36363636363635 L5.454545454545454 166.36363636363635 M10.909090909090908 166.36363636363635 L27.27272727272727 166.36363636363635 M32.72727272727273 166.36363636363635 L38.18181818181818 166.36363636363635 M43.63636363636363 166.36363636363635 L54.54545454545454 166.36363636363635 M81.81818181818181 166.36363636363635 L109.09090909090908 166.36363636363635 M114.54545454545453 166.36363636363635 L119.99999999999999 166.36363636363635 M147.27272727272725 166.36363636363635 L158.18181818181816 166.36363636363635 M0 171.81818181818178 L5.454545454545454 171.81818181818178 M32.72727272727273 171.81818181818178 L38.18181818181818 171.81818181818178 M65.45454545454545 171.81818181818178 L70.9090909090909 171.81818181818178 M81.81818181818181 171.81818181818178 L87.27272727272727 171.81818181818178 M92.72727272727272 171.81818181818178 L109.09090909090908 171.81818181818178 M114.54545454545453 171.81818181818178 L119.99999999999999 171.81818181818178 M141.8181818181818 171.81818181818178 L163.63636363636363 171.81818181818178 M174.54545454545453 171.81818181818178 L180 171.81818181818178 M0 177.27272727272725 L38.18181818181818 177.27272727272725 M43.63636363636363 177.27272727272725 L49.090909090909086 177.27272727272725 M59.99999999999999 177.27272727272725 L65.45454545454545 177.27272727272725 M81.81818181818181 177.27272727272725 L87.27272727272727 177.27272727272725 M98.18181818181817 177.27272727272725 L103.63636363636363 177.27272727272725 M109.09090909090908 177.27272727272725 L114.54545454545453 177.27272727272725 M119.99999999999999 177.27272727272725 L130.9090909090909 177.27272727272725 M141.8181818181818 177.27272727272725 L147.27272727272725 177.27272727272725 M152.72727272727272 177.27272727272725 L158.18181818181816 177.27272727272725 "
                              fill={
                                Array [
                                  0,
                                  4278190080,
                                ]
                              }
                              fillOpacity={1}
                              fillRule={1}
                              matrix={
                                Array [
                                  1,
                                  0,
                                  0,
                                  1,
                                  0,
                                  0,
                                ]
                              }
                              opacity={1}
                              originX={0}
                              originY={0}
                              propList={
                                Array [
                                  "stroke",
                                  "strokeWidth",
                                ]
                              }
                              rotation={0}
                              scaleX={1}
                              scaleY={1}
                              skewX={0}
                              skewY={0}
                              stroke={
                                Array [
                                  0,
                                  4278190080,
                                ]
                              }
                              strokeDasharray={null}
                              strokeDashoffset={null}
                              strokeLinecap={0}
                              strokeLinejoin={0}
                              strokeMiterlimit={4}
                              strokeOpacity={1}
                              strokeWidth={5.454545454545454}
                              vectorEffect={0}
                              x={0}
                              y={0}
                            />
                          </RNSVGGroup>
                        </RNSVGSvgView>
                        <View
                          style={
                            Array [
                              Object {
                                "marginTop": 40,
                              },
                              undefined,
                            ]
                          }
                        >
                          <Text
                            center={true}
                            light={true}
                            small={true}
                            style={
                              Array [
                                Object {
                                  "color": "#0A1427",
                                  "fontFamily": "Aktiv Grotesk App",
                                  "fontWeight": "400",
                                  "includeFontPadding": false,
                                  "textAlignVertical": "center",
                                },
                                Array [
                                  Object {
                                    "color": "#8B939E",
                                    "fontSize": 16,
                                    "marginBottom": 5,
                                    "textAlign": "center",
                                  },
                                  undefined,
                                ],
                              ]
                            }
                          >
                            Or press to share
                          </Text>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
              <View
                style={
                  Array [
                    Object {
                      "backgroundColor": "#ffffff",
                      "height": 100,
                      "marginBottom": -100,
                      "width": "100%",
                    },
                    undefined,
                  ]
                }
              />
            </View>
          </View>
          <View
            borderColor="#2f86eb"
            opacity={0}
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#ffffff",
                  "borderColor": "#2f86eb",
                  "borderLeftWidth": 10,
                  "borderStyle": "solid",
                  "elevation": 9,
                  "justifyContent": "center",
                  "left": 0,
                  "opacity": 0,
                  "paddingBottom": 10,
                  "paddingTop": 30,
                  "position": "absolute",
                  "shadowColor": "#333",
                  "shadowOffset": Object {
                    "height": 2,
                    "width": 0,
                  },
                  "shadowOpacity": 0.25,
                  "shadowRadius": 10,
                  "top": 0,
                  "width": "100%",
                  "zIndex": 1000,
                },
                Object {
                  "transform": Array [
                    Object {
                      "translateY": -260,
                    },
                  ],
                },
              ]
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "flex-start",
                    "display": "flex",
                    "flexDirection": "row",
                    "justifyContent": "center",
                  },
                  undefined,
                ]
              }
            >
              <View
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "alignSelf": "stretch",
                      "display": "flex",
                      "flexBasis": 0,
                      "flexGrow": 2,
                      "flexShrink": 1,
                      "justifyContent": "center",
                      "paddingTop": 2,
                    },
                    undefined,
                  ]
                }
              >
                <View
                  name="info-circle"
                  style={
                    Object {
                      "color": "#2f86eb",
                      "fontSize": 24,
                    }
                  }
                />
              </View>
              <View
                style={
                  Array [
                    Object {
                      "alignSelf": "stretch",
                      "flexBasis": 0,
                      "flexGrow": 9,
                      "flexShrink": 1,
                      "justifyContent": "center",
                    },
                    undefined,
                  ]
                }
              >
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#0A1427",
                        "fontFamily": "Aktiv Grotesk App",
                        "fontWeight": "400",
                        "includeFontPadding": false,
                        "textAlignVertical": "center",
                      },
                      Object {
                        "color": "#8B939E",
                      },
                    ]
                  }
                >
                  
                </Text>
              </View>
              <View
                accessible={true}
                isTVSelectable={true}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "alignSelf": "stretch",
                    "display": "flex",
                    "flex": 2,
                    "justifyContent": "center",
                    "opacity": 1,
                    "paddingBottom": 0,
                    "paddingLeft": 0,
                    "paddingRight": 0,
                    "paddingTop": 0,
                  }
                }
              >
                <View
                  name="close"
                  style={
                    Object {
                      "alignItems": "center",
                      "alignSelf": "center",
                      "borderWidth": 0,
                      "color": "#C6CACD",
                      "fontSize": undefined,
                      "justifyContent": "center",
                      "marginBottom": undefined,
                      "marginLeft": undefined,
                      "marginRight": undefined,
                      "marginTop": undefined,
                      "paddingTop": 0,
                      "textAlign": "center",
                      "width": 32,
                    }
                  }
                />
              </View>
            </View>
          </View>
          <Modal
            animationType="fade"
            hardwareAccelerated={false}
            onRequestClose={[Function]}
            transparent={true}
            visible={false}
          >
            <View
              accessible={true}
              isTVSelectable={true}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "backgroundColor": "rgba(0,0,0,0.4)",
                  "flex": 1,
                  "justifyContent": "flex-end",
                  "opacity": 1,
                }
              }
            >
              <View
                accessible={true}
                isTVSelectable={true}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "backgroundColor": "#fff",
                    "elevation": 4,
                    "height": NaN,
                    "maxHeight": 667,
                    "minHeight": 56,
                    "opacity": 1,
                    "padding": 15,
                  }
                }
              >
                <RCTScrollView
                  data={Array []}
                  disableVirtualization={false}
                  getItem={[Function]}
                  getItemCount={[Function]}
                  horizontal={false}
                  initialNumToRender={10}
                  keyExtractor={[Function]}
                  maxToRenderPerBatch={10}
                  numColumns={1}
                  onContentSizeChange={[Function]}
                  onEndReachedThreshold={2}
                  onLayout={[Function]}
                  onMomentumScrollEnd={[Function]}
                  onScroll={[Function]}
                  onScrollBeginDrag={[Function]}
                  onScrollEndDrag={[Function]}
                  removeClippedSubviews={false}
                  renderItem={[Function]}
                  scrollEventThrottle={50}
                  stickyHeaderIndices={Array []}
                  style={
                    Object {
                      "marginHorizontal": -15,
                      "marginTop": 0,
                    }
                  }
                  updateCellsBatchingPeriod={50}
                  viewabilityConfigCallbackPairs={Array []}
                  windowSize={21}
                >
                  <View />
                </RCTScrollView>
              </View>
            </View>
          </Modal>
        </View>
      </View>
    </Modal>
    <View
      style={
        Array [
          Object {
            "borderBottomWidth": 0,
            "paddingBottom": 0,
            "paddingLeft": 20,
            "paddingRight": 20,
            "paddingTop": 0,
            "zIndex": 10,
          },
          undefined,
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "flex-end",
              "flexDirection": "row",
              "height": 50,
              "justifyContent": "flex-end",
              "marginBottom": 4,
              "marginTop": 20,
            },
            undefined,
          ]
        }
      >
        <View
          flex={[Function]}
          showTitleLeft={true}
          style={
            Array [
              Object {
                "alignItems": "flex-start",
                "alignSelf": "center",
                "flex": 1,
              },
              Object {
                "alignItems": "flex-end",
                "flexBasis": 0,
                "flexGrow": 2,
                "flexShrink": 1,
                "justifyContent": "flex-start",
              },
              undefined,
            ]
          }
        >
          <View
            noMargin={true}
            style={
              Array [
                Object {
                  "alignSelf": "flex-start",
                  "marginBottom": 0,
                  "marginLeft": 0,
                  "marginRight": 0,
                  "marginTop": 0,
                  "position": "relative",
                  "top": 0,
                },
                undefined,
              ]
            }
          >
            <Text
              ellipsizeMode="middle"
              numberOfLines={1}
              style={
                Array [
                  Object {
                    "color": "#0A1427",
                    "fontFamily": "Aktiv Grotesk App",
                    "fontWeight": "400",
                    "includeFontPadding": false,
                    "textAlignVertical": "center",
                  },
                  Array [
                    Object {
                      "color": "#0A1427",
                      "fontFamily": "Aktiv Grotesk App",
                      "fontWeight": "600",
                      "includeFontPadding": false,
                      "textAlignVertical": "center",
                    },
                    Array [
                      Object {
                        "fontSize": 22,
                        "fontWeight": "700",
                        "lineHeight": 28,
                      },
                      Array [
                        Object {
                          "fontFamily": "Aktiv Grotesk App",
                        },
                        undefined,
                      ],
                    ],
                  ],
                ]
              }
            >
              contact info
              <Text
                style={
                  Array [
                    Object {
                      "color": "#0A1427",
                      "fontFamily": "Aktiv Grotesk App",
                      "fontWeight": "400",
                      "includeFontPadding": false,
                      "textAlignVertical": "center",
                    },
                    Array [
                      Object {
                        "color": "#0A1427",
                        "fontFamily": "Aktiv Grotesk App",
                        "fontWeight": "600",
                        "includeFontPadding": false,
                        "textAlignVertical": "center",
                      },
                      Array [
                        Object {
                          "color": "#00bfff",
                          "fontSize": 30,
                        },
                        undefined,
                      ],
                    ],
                  ]
                }
              >
                .
              </Text>
            </Text>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#ffffff",
            "borderBottomColor": "#f5f5f5",
            "borderBottomWidth": 0.5,
            "borderTopColor": "#f5f5f5",
            "borderTopWidth": 0.5,
            "display": "flex",
            "flexDirection": "row",
            "justifyContent": "space-between",
            "paddingHorizontal": 20,
            "paddingVertical": 20,
          },
          undefined,
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "display": "flex",
              "flexBasis": 0,
              "flexDirection": "row",
              "flexGrow": 1,
              "flexShrink": 1,
              "justifyContent": "space-between",
            },
            undefined,
          ]
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#0A1427",
                "fontFamily": "Aktiv Grotesk App",
                "fontWeight": "400",
                "includeFontPadding": false,
                "textAlignVertical": "center",
              },
              Array [
                Object {
                  "fontSize": 18,
                },
                undefined,
              ],
            ]
          }
        >
          Name: test test
        </Text>
        <RCTSwitch
          accessibilityRole="button"
          disabled={false}
          onChange={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "height": 31,
                "width": 51,
              },
              Object {
                "marginBottom": -5,
                "marginTop": -5,
              },
            ]
          }
          value={true}
        />
      </View>
    </View>
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#ffffff",
            "borderBottomColor": "#f5f5f5",
            "borderBottomWidth": 0.5,
            "borderTopColor": "#f5f5f5",
            "borderTopWidth": 0.5,
            "display": "flex",
            "flexDirection": "row",
            "justifyContent": "space-between",
            "paddingHorizontal": 20,
            "paddingVertical": 20,
          },
          undefined,
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "display": "flex",
              "flexBasis": 0,
              "flexDirection": "row",
              "flexGrow": 1,
              "flexShrink": 1,
              "justifyContent": "space-between",
            },
            undefined,
          ]
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#0A1427",
                "fontFamily": "Aktiv Grotesk App",
                "fontWeight": "400",
                "includeFontPadding": false,
                "textAlignVertical": "center",
              },
              Array [
                Object {
                  "fontSize": 18,
                },
                undefined,
              ],
            ]
          }
        >
          Username: testUser
        </Text>
        <RCTSwitch
          accessibilityRole="button"
          disabled={false}
          onChange={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "height": 31,
                "width": 51,
              },
              Object {
                "marginBottom": -5,
                "marginTop": -5,
              },
            ]
          }
          value={false}
        />
      </View>
    </View>
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#ffffff",
            "borderBottomColor": "#f5f5f5",
            "borderBottomWidth": 0.5,
            "borderTopColor": "#f5f5f5",
            "borderTopWidth": 0.5,
            "display": "flex",
            "flexDirection": "row",
            "justifyContent": "space-between",
            "paddingHorizontal": 20,
            "paddingVertical": 20,
          },
          undefined,
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "display": "flex",
              "flexBasis": 0,
              "flexDirection": "row",
              "flexGrow": 1,
              "flexShrink": 1,
              "justifyContent": "space-between",
            },
            undefined,
          ]
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#0A1427",
                "fontFamily": "Aktiv Grotesk App",
                "fontWeight": "400",
                "includeFontPadding": false,
                "textAlignVertical": "center",
              },
              Array [
                Object {
                  "fontSize": 18,
                },
                undefined,
              ],
            ]
          }
        >
          Email: test@test.com
        </Text>
        <RCTSwitch
          accessibilityRole="button"
          disabled={false}
          onChange={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "height": 31,
                "width": 51,
              },
              Object {
                "marginBottom": -5,
                "marginTop": -5,
              },
            ]
          }
          value={true}
        />
      </View>
    </View>
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#ffffff",
            "borderBottomColor": "#f5f5f5",
            "borderBottomWidth": 0.5,
            "borderTopColor": "#f5f5f5",
            "borderTopWidth": 0.5,
            "display": "flex",
            "flexDirection": "row",
            "justifyContent": "space-between",
            "paddingHorizontal": 20,
            "paddingVertical": 20,
          },
          undefined,
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "display": "flex",
              "flexBasis": 0,
              "flexDirection": "row",
              "flexGrow": 1,
              "flexShrink": 1,
              "justifyContent": "space-between",
            },
            undefined,
          ]
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#0A1427",
                "fontFamily": "Aktiv Grotesk App",
                "fontWeight": "400",
                "includeFontPadding": false,
                "textAlignVertical": "center",
              },
              Array [
                Object {
                  "fontSize": 18,
                },
                undefined,
              ],
            ]
          }
        >
          City: testCity
        </Text>
        <RCTSwitch
          accessibilityRole="button"
          disabled={false}
          onChange={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "height": 31,
                "width": 51,
              },
              Object {
                "marginBottom": -5,
                "marginTop": -5,
              },
            ]
          }
          value={false}
        />
      </View>
    </View>
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#ffffff",
            "borderBottomColor": "#f5f5f5",
            "borderBottomWidth": 0.5,
            "borderTopColor": "#f5f5f5",
            "borderTopWidth": 0.5,
            "display": "flex",
            "flexDirection": "row",
            "justifyContent": "space-between",
            "paddingHorizontal": 20,
            "paddingVertical": 20,
          },
          undefined,
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "display": "flex",
              "flexBasis": 0,
              "flexDirection": "row",
              "flexGrow": 1,
              "flexShrink": 1,
              "justifyContent": "space-between",
            },
            undefined,
          ]
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#0A1427",
                "fontFamily": "Aktiv Grotesk App",
                "fontWeight": "400",
                "includeFontPadding": false,
                "textAlignVertical": "center",
              },
              Array [
                Object {
                  "fontSize": 18,
                },
                undefined,
              ],
            ]
          }
        >
          Country: testCountry
        </Text>
        <RCTSwitch
          accessibilityRole="button"
          disabled={false}
          onChange={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "height": 31,
                "width": 51,
              },
              Object {
                "marginBottom": -5,
                "marginTop": -5,
              },
            ]
          }
          value={false}
        />
      </View>
    </View>
    <View
      style={
        Array [
          Object {
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingTop": 20,
          },
          undefined,
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "marginLeft": 20,
            },
            undefined,
          ]
        }
      >
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "alignSelf": "auto",
              "backgroundColor": "#007AFF",
              "borderColor": "rgba(0, 0, 0, 0.085)",
              "borderRadius": 40,
              "borderStyle": "solid",
              "borderWidth": 0,
              "elevation": 1,
              "flexDirection": "row",
              "height": 34,
              "justifyContent": "center",
              "marginBottom": 0,
              "marginLeft": 0,
              "marginRight": 0,
              "marginTop": 0,
              "opacity": 1,
              "paddingBottom": 0,
              "paddingLeft": 20,
              "paddingRight": 20,
              "paddingTop": 0,
              "shadowColor": "rgba(0,0,0,.12)",
              "shadowOffset": Object {
                "height": 2,
                "width": 0,
              },
              "shadowOpacity": 1,
              "shadowRadius": 7,
              "width": "auto",
            }
          }
        >
          <Text
            small={true}
            style={
              Array [
                Object {
                  "color": "#0A1427",
                  "fontFamily": "Aktiv Grotesk App",
                  "fontWeight": "400",
                  "includeFontPadding": false,
                  "textAlignVertical": "center",
                },
                Array [
                  Object {
                    "color": "#0A1427",
                    "fontFamily": "Aktiv Grotesk App",
                    "fontWeight": "600",
                    "includeFontPadding": false,
                    "textAlignVertical": "center",
                  },
                  Array [
                    Object {
                      "color": "#ffffff",
                      "fontSize": 14,
                      "marginBottom": 0,
                    },
                    undefined,
                  ],
                ],
              ]
            }
            theme={
              Object {
                "background": "#007AFF",
                "borderColor": "rgba(0, 0, 0, 0.085)",
                "borderWidth": 0,
                "color": "#ffffff",
                "shadow": true,
              }
            }
          >
            Cancel
          </Text>
        </View>
      </View>
      <View
        style={
          Array [
            Object {
              "marginLeft": 20,
            },
            undefined,
          ]
        }
      >
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "alignSelf": "auto",
              "backgroundColor": "#007AFF",
              "borderColor": "rgba(0, 0, 0, 0.085)",
              "borderRadius": 40,
              "borderStyle": "solid",
              "borderWidth": 0,
              "elevation": 1,
              "flexDirection": "row",
              "height": 34,
              "justifyContent": "center",
              "marginBottom": 0,
              "marginLeft": 0,
              "marginRight": 0,
              "marginTop": 0,
              "opacity": 1,
              "paddingBottom": 0,
              "paddingLeft": 20,
              "paddingRight": 20,
              "paddingTop": 0,
              "shadowColor": "rgba(0,0,0,.12)",
              "shadowOffset": Object {
                "height": 2,
                "width": 0,
              },
              "shadowOpacity": 1,
              "shadowRadius": 7,
              "width": "auto",
            }
          }
        >
          <Text
            small={true}
            style={
              Array [
                Object {
                  "color": "#0A1427",
                  "fontFamily": "Aktiv Grotesk App",
                  "fontWeight": "400",
                  "includeFontPadding": false,
                  "textAlignVertical": "center",
                },
                Array [
                  Object {
                    "color": "#0A1427",
                    "fontFamily": "Aktiv Grotesk App",
                    "fontWeight": "600",
                    "includeFontPadding": false,
                    "textAlignVertical": "center",
                  },
                  Array [
                    Object {
                      "color": "#ffffff",
                      "fontSize": 14,
                      "marginBottom": 0,
                    },
                    undefined,
                  ],
                ],
              ]
            }
            theme={
              Object {
                "background": "#007AFF",
                "borderColor": "rgba(0, 0, 0, 0.085)",
                "borderWidth": 0,
                "color": "#ffffff",
                "shadow": true,
              }
            }
          >
            Generate QR code
          </Text>
        </View>
      </View>
    </View>
  </View>
</View>
`;
